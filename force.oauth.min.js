(function(){window.force=window.force||{};force.oauth=force.oauth||{defaults:{scope:"id",loginUrl:"https://login.salesforce.com",callbackPath:undefined,popup:true,cacheTokenInSessionStorage:false,unauthorized:undefined,error:undefined},configure:function(e){for(var t in this.defaults)this[t]=this.defaults[t];for(var t in e)this[t]=e[t]},ready:function(e){if(!e)throw"No config!";if(!e.clientId)throw"No clientId property in config!";if(!e.authorized)throw"No authorized property in config!";if(!(typeof e.authorized==="function"))throw"authorized config property must be a function!";if(e.unauthorized&&!(typeof e.unauthorized==="function"))throw"unauthorized config property must be a function!";if(!e.popup&&!e.cacheTokenInSessionStorage)throw"popup must be enabled if cacheTokenInSessionStorage is enabled";this.configure(e);if(this.hasAuthorizationResponse())this.callback();else if(this.hasSessionToken())this.authorized(this.getSessionToken());else if(this.unauthorized)this.unauthorized();else this.authorize()},authorize:function(){if(this.popup)this.openPopup(this.getAuthorizeUrl("popup"));else this.setWindowLocationHref(this.getAuthorizeUrl("page"))},callback:function(e){if(e)this.configure(e);if(opener)opener.force.oauth._callback(window);else this._callback()},_callback:function(e){authorizationResponse=this.parseAuthorizationResponse(e?e.location.hash:this.getWindowLocationHash());if(authorizationResponse.error){if(this.error)this.error(authorizationResponse);else throw authorizationResponse}this.setSessionToken(authorizationResponse);if(e){e.close();this.authorized(authorizationResponse)}else{this.replaceWindowLocation(authorizationResponse.state)}},clearSessionToken:function(e){sessionStorage.setItem("token",undefined)},setSessionToken:function(e){if(this.cacheTokenInSessionStorage)sessionStorage.setItem("token",JSON.stringify(e))},getSessionToken:function(){var e=undefined;try{e=JSON.parse(sessionStorage.getItem("token"))}catch(t){}return e},hasSessionToken:function(){return this.getSessionToken()&&this.getSessionToken()!=null},parseAuthorizationResponse:function(e){var t={};if(e){if(e[0]==="#")e=e.substr(1);var n=e.split("&");for(var r in n){var i=n[r].split("=");t[i[0]]=unescape(i[1])}}if(!t.access_token&&!t.error)t=undefined;return t},hasAuthorizationResponse:function(e){if(!e)e=this.getWindowLocationHash();if(e){if(e[0]==="#")e=e.substr(1);var t=e.split("&");for(var n in t){var r=t[n].split("=");if(r)r=r[0];if(r&&(r==="access_token"||r==="error"))return true}}return false},getAuthorizeUrl:function(e){var t=this.loginUrl+"/services/oauth2/authorize?response_type=token"+"&display="+escape(e)+"&scope="+escape(this.scope)+"&client_id="+escape(this.clientId)+"&redirect_uri="+escape(this.getRedirectUrl())+"&state="+escape(this.getWindowLocationHref());return t},openPopup:function(e){window.open(e,"Connect","height=524,width=675,toolbar=0,scrollbars=0"+",status=0,resizable=0,location=0,menuBar=0,left="+window.screenX+(window.outerWidth/2-675/2)+",top="+window.screenY+(window.outerHeight/2-524/2)).focus()},getRedirectUrl:function(){return window.location.protocol+"//"+window.location.host+(this.callbackPath?this.callbackPath:window.location.pathname)},getCurrentUrl:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname},setWindowLocationHref:function(e){window.location.href=e},getWindowLocationHref:function(){return window.location.href},replaceWindowLocation:function(e){window.location.replace(e)},getWindowLocationHash:function(){return window.location.hash}}})()